# CreditRiskModel 
# Load the data 
loan.data <- read.csv("path/LoansTrainingSetV2.csv", header = TRUE, stringsAsFactors = FALSE)
summary(loan.data)
  # Current.Loan.Amount : Max.   :99999999 outlier
  # Credit.Score should 0 to 800 but have more than that, and NA's 21338
  # Annual.Income : have outlier Mean:  72486  ,  Max.:8713547, NA's   :21338 
  # Months.since.last.delinquent : NA's   :59003
  # Current.Credit.Balance : Mean :  15483, Max. :1730472, 
  # Bankruptcies : NA's   :228
  # Tax.Liens : NA's   :11

dim(loan.data ) # rows: 111107   , cols: 19
anyDuplicated(loan.data)  # duplicate rows : 88911
dim(loan.data)[1] - anyDuplicated(loan.data$Loan.ID) # unique no of rows

# Remove Duplicate Rows
length(unique(loan.data$Loan.ID))  # unique loan ids: 88910
#loan.data.unique1 <- loan.data[unique(loan.data$Loan.ID), ]  # return unique rows but took lot of time
loan.data.unique <- loan.data[row.names(as.data.frame(unique(loan.data$Loan.ID))), ]
anyDuplicated(loan.data.unique)  # returns 0 , no duplicate

# Convert Data Type
sapply(loan.data.unique, is.numeric)  # Which variables are numeric

  # Convert Loan.Status to factor

# Convert Loan.Status to factor 
# Convert Term to factor 
# Convert Home.Ownership to factor 
# Convert Purpose to factor
colFactors <- c("Loan.Status","Term","Home.Ownership","Purpose","Years.in.current.job" )
loan.data.unique[colFactors] <- lapply(loan.data.unique[colFactors], as.factor)
  # Loan.Status : Factor w/ 2 levels, Term : Factor w/ 2 levels "Long Term","Short Term", Home.Ownership : Factor w/ 4 levels, Purpose: Factor w/ 16

str(loan.data.unique)

# Maximum.Open.Credit , character to numeric is required
#Replacing "#VALUE!" with NA
str(loan.data.unique$Maximum.Open.Credit)
loan.data.unique$Maximum.Open.Credit <- str_replace_all(loan.data.unique$Maximum.Open.Credit,"#VALUE!",NA)
loan.data.unique$Maximum.Open.Credit <- as.numeric(loan.data.unique$Maximum.Open.Credit)
class(loan.data.unique$Maximum.Open.Credit)
# Monthly.Debt - Replace $ with no space, "," with "" and convert to numeric
library(stringr)
loan.data.unique$Monthly.Debt<- str_replace_all(loan.data.unique$Monthly.Debt, fixed("$"), "")
loan.data.unique$Monthly.Debt<- str_replace_all(loan.data.unique$Monthly.Debt, fixed(","), "")
loan.data.unique$Monthly.Debt <- as.double(loan.data.unique$Monthly.Debt, length=2)

# OR using regexpression 
loan.data.unique$Monthly.Debt<- str_replace_all(loan.data.unique$Monthly.Debt, "^\\$|[,]*", "")
loan.data.unique$Monthly.Debt <- as.double(loan.data.unique$Monthly.Debt, length=2)



# Regular expression examples 
str_extract_all("The Cat in the Hat", regex("[a-z]+", TRUE))
str_extract_all("$12,34,567", "^\\$[[\\d]*[,]*[\\d]*]*")
regtest <- str_replace_all("$12,34,567", "^\\$|[,]*","")

# Years.in.current.job , replace n/a with NA
loan.data.unique$Years.in.current.job <- str_replace_all(loan.data.unique$Years.in.current.job, fixed("n/a"),NA)
class(loan.data.unique$Years.in.current.job)

# Replace "HaveMortgage" with "Home Mortgage"
loan.data.unique$Home.Ownership <- str_replace_all(loan.data.unique$Home.Ownership, "HaveMortgage", "Home Mortgage")

# Replace "other" with "Other in col Purpose
loan.data.unique$Purpose <-  str_replace_all(loan.data.unique$Purpose, fixed("other"), "Other")
# Reconvert to factor
loan.data.unique[colFactors] <- lapply(loan.data.unique[colFactors], as.factor)


# Idenify outliers
# Current.Loan.Amount : there are outliers.There is a big difference between mean and median
summary(loan.data.unique$Current.Loan.Amount) # Mean: 14340000, Median: 14360, Max: 100000000
library(ggplot2)
# Histogram suggests that we have outliers.
qplot(loan.data.unique$Current.Loan.Amount,geom="histogram")
boxplot(loan.data.unique$Current.Loan.Amount)
# Seperating them using IQR methodology.
outlier <- boxplot.stats(loan.data.unique$Current.Loan.Amount)
length(outlier$out) # 12738 outliers
# Replace outlier with NA
loan.data.unique$Current.Loan.Amount[loan.data.unique$Current.Loan.Amount>=min(outlier$out)] <- NA
# Check the histrogram and boxplo again
qplot(loan.data.unique$Current.Loan.Amount,geom="histogram")
boxplot(loan.data.unique$Current.Loan.Amount)

# Credit.Score should 0 to 800 but have more than that, and NA's 21338
summary(loan.data.unique$Credit.Score) # Mean: 1199     Median: 7510
qplot(loan.data.unique$Credit.Score, geom = "histogram")
boxplot(loan.data.unique$Credit.Score)
# dividing or remove last digit of any score more than 800 by 10
loan.data.unique$Credit.Score <- ifelse(loan.data.unique$Credit.Score > 800, 
                                        loan.data.unique$Credit.Score/10, 
                                        loan.data.unique$Credit.Score) 
summary(loan.data.unique$Credit.Score)  # NA's 21338 

summary(loan.data.unique$Annual.Income)
qplot(loan.data.unique$Annual.Income, geom = "histogram")
boxplot(loan.data.unique$Annual.Income)
quantile(loan.data.unique$Annual.Income,probs = seq(0,1,0.05),na.rm=TRUE)
outlier <- quantile(loan.data.unique$Annual.Income,probs = seq(0.95,1,0.01),na.rm=TRUE) 
    # Outlier out put , >99% have outlier , replace this with the data of 99%
    #       95%       96%       97%       98%       99%      100% 
    # 147645.0  155278.2  170949.6  195025.8  239287.0 8713547.0 
# outlier[5] - 99% , outlier[[5]] - 239287
loan.data.unique$Annual.Income[loan.data.unique$Annual.Income>outlier[[5]]] <- outlier[[5]]
qplot(loan.data.unique$Annual.Income, geom = "histogram") # right skewed graph
boxplot(loan.data.unique$Annual.Income) # still have outliers
# Transforming variables can also eliminate outliers. 
  # Natural log of a value reduces the variation caused by extreme values
loan.data.unique$Annual.Income<-log(loan.data.unique$Annual.Income)
qplot(log(loan.data.unique$Annual.Income))

summary(loan.data.unique$Monthly.Debt)
qplot(loan.data.unique$Monthly.Debt, geom = "histogram")
boxplot(loan.data.unique$Monthly.Debt)
# Check with quantile
quantile(loan.data.unique$Monthly.Debt,probs = seq(0,1,0.05),na.rm=TRUE)
  #        90%        95%       100% 
  # 1743.0830  2115.5110 22939.1200
  # Outlier is between 95% to 100%
outlier <- quantile(loan.data.unique$Monthly.Debt,probs = seq(0.95,1,0.01),na.rm=TRUE)
  #    95%       96%       97%       98%       99%      100% 
  # 2115.511  2239.806  2407.532  2658.576  3087.111 22939.120
  # Outlier is at 100% value , so need to replace >99% values with max values
loan.data.unique$Monthly.Debt[loan.data.unique$Monthly.Debt > outlier[[5]]] <- outlier[[5]]   # outlier[[5]] = 3087.111
qplot(loan.data.unique$Monthly.Debt, geom = "histogram")  # Right skewd 
boxplot(loan.data.unique$Monthly.Debt)
# Use log for remove skewd 
qplot(log(loan.data.unique$Monthly.Debt), geom = "histogram") # Left skewd , transfermation not required

summary(loan.data.unique$Years.of.Credit.History)
hist(loan.data.unique$Years.of.Credit.History)  # Data is good 
boxplot(loan.data.unique$Years.of.Credit.History)

summary(loan.data.unique$Months.since.last.delinquent)   # Data is good but NA's - 48506

summary(loan.data.unique$Number.of.Open.Accounts)  # Mean : 11.11, Median: 10.00, 3rd Qu:14.00, Max.:76.00
 # Max is 76.00 have outliers
hist(loan.data.unique$Number.of.Open.Accounts)
quantile(loan.data.unique$Number.of.Open.Accounts, probs = seq(0,1,0.05))
  # 95% 100% 
  # 20   76
# most of the outliers are above >95% , need to analyze more 
quantile(loan.data.unique$Number.of.Open.Accounts, probs = seq(0.95,1,0.01))
  # 95%  96%  97%  98%  99% 100% 
  # 20   21   22   24   26   76
quantile(loan.data.unique$Number.of.Open.Accounts, probs = seq(0.99,1,0.001))
  # 99% 99.1% 99.2% 99.3% 99.4% 99.5% 99.6% 99.7% 99.8% 99.9%  100% 
  # 26    27    27    28    28    29    30    31    33    36    76
  # most of the outlier is in 100%th, replace this with 99% value
outlier <- quantile(loan.data.unique$Number.of.Open.Accounts, probs = seq(0.99,1,0.01)) # [[1]] = 26, [[2]]=76
loan.data.unique$Number.of.Open.Accounts[loan.data.unique$Number.of.Open.Accounts>outlier[[1]]] <- outlier[[1]]
summary(loan.data.unique$Number.of.Open.Accounts)
hist(loan.data.unique$Number.of.Open.Accounts)
boxplot(loan.data.unique$Number.of.Open.Accounts)

summary(loan.data.unique$Number.of.Credit.Problems)
qplot(loan.data.unique$Number.of.Credit.Problems,geom = "histogram") # data is good

summary(loan.data.unique$Current.Credit.Balance)
qplot(loan.data.unique$Current.Credit.Balance,geom = "histogram", bins=10)
quantile(loan.data.unique$Current.Credit.Balance, probs = seq(0.0,1,0.05))
  # 80%        85%        90%        95%       100% 
  # 22034.20   25641.00   30843.50   39933.30 1730472.00 
  # Most outliers above 95%th 
outlier <- quantile(loan.data.unique$Current.Credit.Balance, probs = seq(0.95,1,0.01))
  # 95%        96%        97%        98%        99%       100% 
  # 39933.30   43501.20   48507.73   57938.12   81007.19 1730472.00 
  # outliers are above 98%th, will replace with max value of 98%th 57938.12 
loan.data.unique$Current.Credit.Balance[loan.data.unique$Current.Credit.Balance>outlier[[1]]] <- outlier[[1]]
summary(loan.data.unique$Current.Credit.Balance)
qplot(loan.data.unique$Current.Credit.Balance,geom = "histogram", bins=10)
qplot(log(loan.data.unique$Current.Credit.Balance))
loan.data.unique$Current.Credit.Balance <- sqrt(loan.data.unique$Current.Credit.Balance)

summary(loan.data.unique$Maximum.Open.Credit) # NA's - 2
  # Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's 
  # 0    12780    21780    35970    36370 69990000        2
class(loan.data.unique$Maximum.Open.Credit)
hist(loan.data.unique$Maximum.Open.Credit)

s <- summary(loan.data.unique$Maximum.Open.Credit)
loan.data.unique$Maximum.Open.Credit[loan.data.unique$Maximum.Open.Credit==0] <- s[[2]]
# Have outlier 
quantile(loan.data.unique$Maximum.Open.Credit, probs = seq(0,1,0.05), na.rm = TRUE)
  #         80%         85%         90%         95%        100% 
  #   41167.00    47369.90    56957.50    76602.40 69988086.00
  # Most of the outlier is above 95%th
quantile(loan.data.unique$Maximum.Open.Credit, probs = seq(0.95,1,0.01), na.rm = TRUE)
  #  95%         96%         97%         98%         99%        100% 
  # 76602.40    84316.44    95694.79   114682.88   171423.93 69988086.00
  # Most of the outlier is between 99 and 100%
quantile(loan.data.unique$Maximum.Open.Credit, probs = seq(0.99,1,0.001), na.rm = TRUE)  
outlier <- quantile(loan.data.unique$Maximum.Open.Credit, probs = seq(0.99,1,0.0001), na.rm = TRUE)
  # 99.88%     99.89%     99.90%     99.91%     99.92%     99.93%     99.94%     99.95% 
  # 811232.3   839817.6   892319.0   935377.8  1073883.9  1190717.1  1404301.8  1779141.9 
  # 99.96%     99.97%     99.98%     99.99%    100.00% 
  # 2234058.4  3119995.3  4835864.8 10894619.5 69988086.0 
 # replace >99.9% with 892319.0
outlier <- quantile(loan.data.unique$Maximum.Open.Credit, probs = seq(0.999,1,0.0001), na.rm = TRUE)
  # 99.9%     99.91%     99.92%     99.93%     99.94%     99.95%     99.96%     99.97% 
  # 892319.0   935377.8  1073883.9  1190717.1  1404301.8  1779141.9  2234058.4  3119995.3 
  # 99.98%     99.99%       100% 
  # 4835864.8 10894619.5 69988086.0

loan.data.unique$Maximum.Open.Credit[loan.data.unique$Maximum.Open.Credit>outlier[[1]]] <- outlier[[1]]
summary(loan.data.unique$Maximum.Open.Credit)
qplot(loan.data.unique$Maximum.Open.Credit)
qplot(log(loan.data.unique$Maximum.Open.Credit))  # Normalize 
# Maximum.Open.Credit    Min.   :  -Inf, Mean   :  -Inf  ,if zero then log 0 is inf
 # use log for skewed data
loan.data.unique$Maximum.Open.Credit <- log(loan.data.unique$Maximum.Open.Credit)

class(loan.data.unique$Bankruptcies)
summary(loan.data.unique$Bankruptcies)  # NA's - 192
table(loan.data.unique$Bankruptcies)
  #     0     1     2     3     4     5     6     7 
  # 79323  8936   353    80    19     5     1     1
qplot(loan.data.unique$Bankruptcies)


class(loan.data.unique$Tax.Liens)
summary(loan.data.unique$Tax.Liens)  # NA's - 8
table(loan.data.unique$Tax.Liens)
  #    0     1     2     3     4     5     6     7     8     9    10    11    15 
  #87274  1132   305    99    52    17     9     5     2     4     1     1     1

## Replace NAs
# Count of NA's in each column
nNAs <- function(x) {
    # ifelse(sum(is.na(x))>0, sum(is.na(x)),0)
    # if (sum(is.na(x))>0) return (sum(is.na(x)))
   return (sum(is.na(x)))  
}
sapply(loan.data.unique, nNAs)
  # Current.Loan.Amount           : 12738
  # Credit.Score                  : 21338                
  # Years.in.current.job          : 3817 
  # Annual.Income                 : 21338
  # Months.since.last.delinquent  : 48506
  # Maximum.Open.Credit           : 2
  # Bankruptcies                  : 192
  # Tax.Liens                     : 8

nrow(loan.data.unique)  # Rows : 88910

# Months.since.last.delinquent has 54.55% (=48506/88910) data missing, for better prediction nullify this column
loan.data.unique$Months.since.last.delinquent <- NULL


median(loan.data.unique$Bankruptcies, na.rm = TRUE) # 0 , replace NAs with median
loan.data.unique$Bankruptcies <- ifelse(is.na(loan.data.unique$Bankruptcies)==T,median(loan.data.unique$Bankruptcies, na.rm = TRUE),loan.data.unique$Bankruptcies)
summary(loan.data.unique$Bankruptcies) # No NAs

median(loan.data.unique$Tax.Liens, na.rm = TRUE)   # 0 , replace NAs with median
loan.data.unique$Tax.Liens <- ifelse(is.na(loan.data.unique$Tax.Liens)==T, median(loan.data.unique$Tax.Liens, na.rm = TRUE),loan.data.unique$Tax.Liens)
summary(loan.data.unique$Tax.Liens) # No NAs

# For rest of the variables lets use MICE to remove NAs 
str(loan.data.unique)

# Loan.ID, Customer.ID are unique variables lets not consider now
# Loan.Status is the predicting variable
# Now consider the rest for the variables from columns 4:18 

library(mice)
md.pattern(loan.data.unique)
 imp.mice <- mice(loan.data.unique,m=1, maxit = 5 )
 # iter imp variable
 #  1   1  Current.Loan.Amount  Credit.Score  Years.in.current.job  Annual.Income
 #  2   1  Current.Loan.Amount  Credit.Score  Years.in.current.job  Annual.Income
 #  3   1  Current.Loan.Amount  Credit.Score  Years.in.current.job  Annual.Income
 #  4   1  Current.Loan.Amount  Credit.Score  Years.in.current.job  Annual.Income
 #  5   1  Current.Loan.Amount  Credit.Score  Years.in.current.job  Annual.Income
summary(imp.mice)
imp.mice$imp
loan.data.complete <- complete(imp.mice,1)
summary(loan.data.complete)
which(is.na(loan.data.complete$Maximum.Open.Credit)==T) # row: 4931 37358
#loan.data.complete$Maximum.Open.Credit[c(4931,37358)] <- mean(loan.data.complete$Maximum.Open.Credit,na.rm = T)
summary(loan.data.complete) # All NAs are removed
summary(loan.data.complete$Maximum.Open.Credit)

class(loan.data.complete$Loan.Status)
summary(loan.data.complete$Loan.Status)
levels(loan.data.complete$Loan.Status)
structure(loan.data.complete$Loan.Status)
  #Charged Off 0
  #Fully Paid  1

library(caTools)
loan.data.complete <- loan.data.complete[,-c(1,2)]
split <- sample.split(loan.data.complete$Loan.Status, SplitRatio = 0.7)
table(split)
# TRUE should go in train data
loan.data.train <- subset(loan.data.complete, split==TRUE)
loan.data.test <- subset(loan.data.complete, split==FALSE)
table(loan.data.train$Loan.Status)
table(loan.data.test$Loan.Status)
summary(loan.data.train)
loan.model <- glm(formula = Loan.Status~.,data = loan.data.train,family = "binomial" )
summary(loan.model)
# Residual deviance: 68313  on 62198  degrees of freedom
 # AIC: 68391


# Years.in.current.job - no significant 
# Years.of.Credit.History - no significant
# Number.of.Credit.Problems - no significant
# Bankruptcies  - no significant
# Tax.Liens  - no significant
# Rest of other variables have significant 

loan.model1 <- glm(formula = Loan.Status~.-Years.in.current.job-Years.of.Credit.History-Number.of.Credit.Problems-Bankruptcies-Tax.Liens,data = loan.data.train,family = "binomial" )
summary(loan.model1)
 # Residual deviance: 68340  on 62211  degrees of freedom
 # AIC: 68392
str(loan.data.test)
# Predict with this model 
loan.predict <- predict(loan.model1, newdata = loan.data.test, type = "response")
# Warning messages:
  # 1: contrasts dropped from factor Term 
  # 2: contrasts dropped from factor Years.in.current.job 
  # 3: contrasts dropped from factor Home.Ownership 
  # 4: contrasts dropped from factor Purpose 

str(loan.data.test$Term)
str(loan.data.test$Years.in.current.job)
table(loan.data.test$Loan.Status,loan.predict>0.5)
# Confusion matrix 
#               FALSE  TRUE
  # Charged Off  1317  6235
  # Fully Paid   1031 18090
acc <- (1317+18090)/(1317+6235+1031+18090) # 0.7275

